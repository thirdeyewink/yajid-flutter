{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(flutter pub:*)",
      "Bash(flutter analyze:*)",
      "Bash(flutter run:*)",
      "Bash(flutter clean:*)",
      "Bash(nc:*)",
      "Bash(dart analyze:*)",
      "Bash(timeout 30 flutter run)",
      "Bash(flutter build:*)",
      "Bash(flutter test:*)",
      "WebFetch(domain:www.vecteezy.com)",
      "Bash(find:*)",
      "Bash(git commit:*)",
      "Bash(gh:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(tee:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(done)",
      "Bash(grep:*)",
      "Bash(git checkout:*)",
      "Bash(flutter:*)",
      "Bash(timeout 90 flutter run -d chrome)",
      "Bash(python:*)",
      "Bash(cat:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(firebase deploy:*)",
      "Bash(/bashes)",
      "WebSearch",
      "Bash(dart run:*)",
      "Bash(test:*)",
      "Bash(awk:*)",
      "Read(//c/**)",
      "Bash(genhtml:*)",
      "Bash(lcov:*)",
      "Bash(chmod:*)",
      "Bash(python3:*)",
      "Bash(do echo \"=== $service ===\")",
      "Bash(do echo \"=== $service.dart ===\")",
      "Bash(bc)",
      "Bash(firebase firestore:rules get)",
      "Bash(npm install)",
      "Bash(firebase --version)",
      "Bash(firebase projects:list:*)",
      "Bash(npm run build:*)",
      "Bash(if [ -f coverage/lcov.info ])",
      "Bash(then echo \"Coverage file exists\")",
      "Bash(else echo \"No coverage file found\")",
      "Bash(fi)",
      "Bash(then lcov --summary coverage/lcov.info)",
      "Bash(git mv:*)",
      "Bash(firebase emulators:start:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "mcp__context7__resolve-library-id",
      "WebFetch(domain:pub.dev)",
      "WebFetch(domain:6tail.cn)",
      "Bash(firebase emulators:exec:*)",
      "Bash(java:*)",
      "Bash(firebase setup:emulators:firestore:*)",
      "Bash(firebase setup:emulators:auth:*)",
      "Bash(else echo \"No coverage file\")",
      "Bash(timeout 30 flutter build apk --debug)",
      "Bash(./gradlew:*)",
      "Bash(C:UsersredarAppDataLocalAndroidsdkplatform-toolsadb.exe kill-server)",
      "Bash(C:UsersredarAppDataLocalAndroidsdkplatform-toolsadb.exe start-server)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" kill-server)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" start-server)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" devices)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell ping -c 3 8.8.8.8)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" root)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell \"setprop net.dns1 8.8.8.8 && setprop net.dns2 8.8.4.4\")",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell \"settings put global airplane_mode_on 1 && am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true && sleep 2 && settings put global airplane_mode_on 0 && am broadcast -a android.intent.action.AIRPLANE_MODE --ez state false\")",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell \"getprop | grep -i ''net\\|dns''\")",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell getprop net.dns1)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell ping -c 2 google.com)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell svc wifi disable)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell svc wifi enable)",
      "Bash(\"C:\\Users\\redar\\AppData\\Local\\Android\\sdk\\platform-tools\\adb.exe\" shell ping -c 2 8.8.8.8)"
    ],
    "deny": [],
    "ask": []
  }
}
