name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        flutter-version: ['3.24.0']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          channel: 'stable'
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests with coverage
        run: flutter test --coverage --reporter=expanded

      - name: Check test results
        run: |
          if [ -f "coverage/lcov.info" ]; then
            echo "‚úÖ Tests completed successfully"
            echo "üìä Coverage report generated"
          else
            echo "‚ùå Coverage report not generated"
            exit 1
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-yajid
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Coverage Summary
        run: |
          if command -v lcov &> /dev/null; then
            lcov --summary coverage/lcov.info
          else
            echo "üìä Coverage report generated at coverage/lcov.info"
            echo "Install lcov to see detailed summary"
          fi

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 7

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run flutter analyze with detailed output
        run: flutter analyze --no-fatal-infos

      - name: Check for TODOs
        run: |
          echo "üîç Scanning for TODO comments..."
          TODO_COUNT=$(grep -r "TODO" lib/ --exclude-dir={.dart_tool,build} | wc -l || echo "0")
          echo "Found $TODO_COUNT TODO comments"
          if [ "$TODO_COUNT" -gt 20 ]; then
            echo "‚ö†Ô∏è Warning: High number of TODOs found ($TODO_COUNT)"
          fi

      - name: Check file sizes
        run: |
          echo "üì¶ Checking for large files..."
          find lib/ -type f -size +500k -exec ls -lh {} \; | awk '{ print $9 ": " $5 }' || echo "No large files found"

      - name: Dependency audit
        run: |
          echo "üîê Checking for outdated dependencies..."
          flutter pub outdated || true
